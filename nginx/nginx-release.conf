events {}
http {
  log_format custom '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'upstream: $upstream_addr request_time: $request_time upstream_response_time: $upstream_response_time';

  access_log /var/log/nginx/access.log custom;
  error_log /var/log/nginx/error.log;
  
  server {
    listen 80;
    
    location /api {
      proxy_http_version 1.1;
      proxy_cache_bypass $http_upgrade;

      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_pass http://api:8080;
    }
    
    location / {
      proxy_http_version 1.1;
      proxy_cache_bypass $http_upgrade;

      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_pass http://ui:5001;
    }

    location ~* \.(eot|ttf|woff|woff2)$ {
      add_header Access-Control-Allow-Origin *;
    }
  }

# load balancing 
  # upstream ui {
      # server srv1.example.com;
      # server srv2.example.com;
      # server srv3.example.com;
  # }
}